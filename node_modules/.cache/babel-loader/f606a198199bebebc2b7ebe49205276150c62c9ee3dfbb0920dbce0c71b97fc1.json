{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rfell\\\\react-recommend-page\\\\src\\\\Library JS\\\\SavedGames.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LibraryCSS/Saved.css';\nimport PCLogo from './Images/PCLogoTest.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavedGames() {\n  _s();\n  const [gameData, setGameData] = useState([]);\n  const [jsonData, setJsonData] = useState([]);\n\n  //From localStorage, get names, return them, and search for games in \n  //custom Google Search API, returning these as images (need to dynamically\n  //set width/height).\n\n  //Using a useEffect to continuously load data from local storage and outputing that as our library data.\n  useEffect(() => {\n    const libraryGames = [];\n    for (let x = 0; x < localStorage.length; x++) {\n      //Here, we set the game name, the data for our link/API call, and the key each game is associated with.\n      const gameName = localStorage.getItem(localStorage.key(x)).replace(/\"/g, '');\n      console.log(\"Local storage key is: \", localStorage.key(x));\n      const plusGameName = gameName.replace(' ', '+');\n      const linkData = `https://store.steampowered.com/search/?term=${plusGameName}`;\n\n      //Fetch the image from the API: if it finds an image, it's stored, otherwise, default image.\n      //fetchImage(plusGameName);\n\n      libraryGames.push({\n        name: gameName,\n        url: linkData,\n        key: localStorage.key(x)\n      });\n    }\n    setGameData(libraryGames);\n  }, []);\n  const handleRemove = index => {\n    localStorage.removeItem(index);\n    console.log(\"Removed game was: \", index);\n    var intIndex = parseInt(index);\n    for (var i = intIndex; i < localStorage.length; i++) {\n      var newIndex = i + 1;\n      console.log(newIndex);\n      const gameName = localStorage.getItem(localStorage.key(newIndex));\n      localStorage.setItem(`${i}`, gameName);\n      var removeIndex = newIndex.toString();\n      localStorage.removeItem(removeIndex);\n    }\n    setGameData(prevGame => prevGame.filter(game => game.key !== index));\n  };\n  const fetchImage = async game => {\n    try {\n      //We make our API call to google, giving it our game name (formatted for URLs) and returning an image.\n      const response = await axios.get(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA8yVgNiwh3Mf7OCHvcrQPL4ocikLadk1Y&num=1&searchType=image&start=1&cx=74bd649225d0f43ba&exactTerms=${game}&fileType=.PNG&imgSize=medium&alt=json`);\n      const data = response.data;\n      const imageURL = data.link;\n      /*\r\n      fetch(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA8yVgNiwh3Mf7OCHvcrQPL4ocikLadk1Y&num=1&searchType=image&start=1&cx=74bd649225d0f43ba&exactTerms=${plusGameName}&fileType=.PNG&imgSize=medium&alt=json`)\r\n        .then(response => response.json())\r\n        .then(json => setJsonData(response.link))\r\n        .catch(error => console.error(error))\r\n      */\n      setJsonData(imageURL);\n    } catch (error) {\n      console.error(\"Couldn't retrieve the image...\");\n      setJsonData(PCLogo);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: gameData.length > 0 ? gameData.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InnerLibrary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LeftRow\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"gameImage\",\n          src: game.image,\n          onError: x => x.target.src = PCLogo,\n          alt: \"No Image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: game.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"gameURLs\",\n        children: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"removeGame\",\n        onClick: () => handleRemove(game.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OuterLibrary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No games are added to your library!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(SavedGames, \"PMC/s1JXWT/rpJfN4xe5+7xsq68=\");\n_c = SavedGames;\nexport default SavedGames;\nvar _c;\n$RefreshReg$(_c, \"SavedGames\");","map":{"version":3,"names":["React","useState","useEffect","PCLogo","axios","jsxDEV","_jsxDEV","SavedGames","_s","gameData","setGameData","jsonData","setJsonData","libraryGames","x","localStorage","length","gameName","getItem","key","replace","console","log","plusGameName","linkData","push","name","url","handleRemove","index","removeItem","intIndex","parseInt","i","newIndex","setItem","removeIndex","toString","prevGame","filter","game","fetchImage","response","get","data","imageURL","link","error","children","map","className","id","src","image","onError","target","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rfell/react-recommend-page/src/Library JS/SavedGames.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LibraryCSS/Saved.css';\r\nimport PCLogo from './Images/PCLogoTest.png'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SavedGames() {\r\n\r\n  const [gameData, setGameData] = useState([]);\r\n  const [jsonData, setJsonData] = useState([]);\r\n\r\n  //From localStorage, get names, return them, and search for games in \r\n  //custom Google Search API, returning these as images (need to dynamically\r\n  //set width/height).\r\n\r\n  //Using a useEffect to continuously load data from local storage and outputing that as our library data.\r\n  useEffect(() => {\r\n    const libraryGames = [];\r\n    for (let x = 0; x<localStorage.length; x++){\r\n      //Here, we set the game name, the data for our link/API call, and the key each game is associated with.\r\n      const gameName = localStorage.getItem(localStorage.key(x)).replace(/\"/g, '');\r\n      console.log(\"Local storage key is: \", localStorage.key(x));\r\n      const plusGameName = gameName.replace(' ', '+');\r\n      const linkData = `https://store.steampowered.com/search/?term=${plusGameName}`;\r\n      \r\n      //Fetch the image from the API: if it finds an image, it's stored, otherwise, default image.\r\n      //fetchImage(plusGameName);\r\n      \r\n      libraryGames.push({name: gameName, url: linkData, key: localStorage.key(x)});\r\n    }\r\n\r\n    setGameData(libraryGames);\r\n  }, []);\r\n\r\n  const handleRemove = (index) => {\r\n    localStorage.removeItem(index);\r\n    console.log(\"Removed game was: \", index);\r\n    var intIndex = parseInt(index);\r\n    for(var i = intIndex; i<localStorage.length; i++){\r\n      var newIndex = i+1;\r\n      console.log(newIndex);\r\n      const gameName = localStorage.getItem(localStorage.key(newIndex));      \r\n      localStorage.setItem(`${i}`, gameName);\r\n      var removeIndex = newIndex.toString();\r\n      localStorage.removeItem(removeIndex);\r\n    }\r\n    setGameData((prevGame) => prevGame.filter((game) => game.key !== index));\r\n  }\r\n\r\n  const fetchImage = async (game) => {\r\n    try{\r\n      //We make our API call to google, giving it our game name (formatted for URLs) and returning an image.\r\n      const response = await axios.get(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA8yVgNiwh3Mf7OCHvcrQPL4ocikLadk1Y&num=1&searchType=image&start=1&cx=74bd649225d0f43ba&exactTerms=${game}&fileType=.PNG&imgSize=medium&alt=json`)\r\n      const data = response.data;\r\n      const imageURL = data.link;\r\n      /*\r\n      fetch(`https://www.googleapis.com/customsearch/v1?key=AIzaSyA8yVgNiwh3Mf7OCHvcrQPL4ocikLadk1Y&num=1&searchType=image&start=1&cx=74bd649225d0f43ba&exactTerms=${plusGameName}&fileType=.PNG&imgSize=medium&alt=json`)\r\n        .then(response => response.json())\r\n        .then(json => setJsonData(response.link))\r\n        .catch(error => console.error(error))\r\n      */\r\n      setJsonData(imageURL);\r\n    }\r\n    catch(error){\r\n      console.error(\"Couldn't retrieve the image...\");\r\n      setJsonData(PCLogo)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {gameData.length > 0 ? (\r\n        gameData.map((game, index) => (\r\n          <div key={index} className='InnerLibrary'>\r\n            <div className='LeftRow'>\r\n              <img id=\"gameImage\" src={game.image} onError={(x) => x.target.src = PCLogo} alt=\"No Image...\"></img>\r\n            </div>\r\n            <a href={game.url} target=\"_blank\" rel=\"noopener noreferrer\" className='gameURLs'>\r\n              {game.name}\r\n            </a>\r\n            <button id=\"removeGame\" onClick = {() => handleRemove(game.key)} />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className='OuterLibrary'>\r\n          <p>No games are added to your library!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedGames;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
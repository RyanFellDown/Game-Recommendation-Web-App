{"ast":null,"code":"import React,{useState,useEffect}from'react';import PC from'./Images/PCLogo.png';import'./CSS/Games.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Games(_ref){let{gamesData}=_ref;//The JSON data is sent as an input to this function from Search.js. We return 3 games, so we have the three\n//useStates, and to clean up the JSON data, we have the strings and Game variables.\nconst[data1,setData1]=useState([]);const[data2,setData2]=useState([]);const[data3,setData3]=useState([]);var counter=0;console.log(gamesData);//This function doesn't update the HTML if no game data is input. If it is, the JSON game data is \n//cleaned up and then the useStates data are set to each game's data. This is then mapped in the returned HTML.\nconst fetchAPI=async()=>{//If there's no input, then add nothing to the HTML.\nif(gamesData==null){setData1(\"No games searched...\");setData2(\"No games searched...\");setData3(\"No games searched...\");}else{let Games=[];let updatedGames=[];//Push the game data from the API into the Games array.\nfor(let key in gamesData.games){Games.push(gamesData.games[key]);}//We return up to three games and their data, cleaning it\nfor(let x=0;x<3;x++){Games[x]=Games[x].replace('[','');Games[x]=Games[x].replace(/\\\\u/g,' ');Games[x]=Games[x].replace(']','');Games[x]=Games[x].replace(\",\",'');Games[x]=Games[x].split(/\\s(?=\")/);updatedGames.push(Games[x]);}setData1(updatedGames[0]);setData2(updatedGames[1]);setData3(updatedGames[2]);}};//The useEffect calls fetchAPI with gamesData in order to update once the user inputs a game.\nuseEffect(()=>{fetchAPI();},[gamesData]);const handleLibrary=gameInput=>{var alreadyAdded=false;for(var x=0;x<localStorage.length;x++){let LSData=localStorage.getItem(localStorage.key(x));if(LSData==gameInput){console.log(\"Game is already added to Library!\");alreadyAdded=true;break;}}//If the game hasn't been added to localStorage, add it and keep track of what indexes\n//have been used (will use this in SavedGames.js).\nif(!alreadyAdded){const orderedLS=JSON.parse(localStorage.getItem('order'))||[];const key=orderedLS.length>0?Math.max(...orderedLS.map(Number))+1:0;orderedLS.push(String(key));localStorage.setItem('order',JSON.stringify(orderedLS));localStorage.setItem(key,gameInput);//setGames\nconsole.log(\"Added \",gameInput,\" to library!\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"games\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row-games\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"img\",{src:PC,alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:data1!=\"No games searched...\"&&data1.map((game,index)=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:game},index),/*#__PURE__*/_jsx(\"br\",{})]}))}),/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"Games-Button\",children:/*#__PURE__*/_jsx(\"button\",{id:\"GamesButton\",onClick:()=>handleLibrary(data1[0])})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row-games\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"img\",{src:PC,alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"p\",{children:data2!=\"No games searched...\"&&data2.map((game,index)=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:game},index),/*#__PURE__*/_jsx(\"br\",{})]}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"Games-Button\",children:/*#__PURE__*/_jsx(\"button\",{id:\"GamesButton\",onClick:()=>handleLibrary(data2[0])})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row-games\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"img\",{src:PC,alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"p\",{children:data3!=\"No games searched...\"&&data3.map((game,index)=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:game},index),/*#__PURE__*/_jsx(\"br\",{})]}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"Games-Middle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"Games-Button\",children:/*#__PURE__*/_jsx(\"button\",{id:\"GamesButton\",onClick:()=>handleLibrary(data3[0])})})})]})]});}export default Games;","map":{"version":3,"names":["React","useState","useEffect","PC","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Games","_ref","gamesData","data1","setData1","data2","setData2","data3","setData3","counter","console","log","fetchAPI","updatedGames","key","games","push","x","replace","split","handleLibrary","gameInput","alreadyAdded","localStorage","length","LSData","getItem","orderedLS","JSON","parse","Math","max","map","Number","String","setItem","stringify","className","children","src","alt","game","index","id","onClick"],"sources":["C:/Users/rfell/react-recommend-page/src/Reference JS/Games.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PC from './Images/PCLogo.png';\r\nimport './CSS/Games.css';\r\n\r\nfunction Games({gamesData}) {\r\n    //The JSON data is sent as an input to this function from Search.js. We return 3 games, so we have the three\r\n    //useStates, and to clean up the JSON data, we have the strings and Game variables.\r\n    const [data1, setData1] = useState([]);\r\n    const [data2, setData2] = useState([]);\r\n    const [data3, setData3] = useState([]);\r\n    var counter = 0;\r\n\r\n    console.log(gamesData)\r\n    \r\n    //This function doesn't update the HTML if no game data is input. If it is, the JSON game data is \r\n    //cleaned up and then the useStates data are set to each game's data. This is then mapped in the returned HTML.\r\n    const fetchAPI = async() => {\r\n        //If there's no input, then add nothing to the HTML.\r\n        if(gamesData == null){\r\n            setData1(\"No games searched...\");\r\n            setData2(\"No games searched...\");\r\n            setData3(\"No games searched...\");\r\n        }\r\n        else{\r\n            let Games = [];\r\n            let updatedGames = [];\r\n            \r\n            //Push the game data from the API into the Games array.\r\n            for (let key in gamesData.games){\r\n                Games.push(gamesData.games[key]);\r\n            }\r\n\r\n            //We return up to three games and their data, cleaning it\r\n            for (let x = 0; x<3; x++){\r\n                Games[x] = Games[x].replace('[', '');\r\n                Games[x] = Games[x].replace(/\\\\u/g, ' ');\r\n                Games[x] = Games[x].replace(']', '');\r\n                Games[x] = Games[x].replace(\",\", '');\r\n                Games[x] = Games[x].split(/\\s(?=\")/);\r\n                updatedGames.push(Games[x]);\r\n            }\r\n\r\n            setData1(updatedGames[0]);\r\n            setData2(updatedGames[1]);\r\n            setData3(updatedGames[2]);\r\n        }\r\n    };\r\n     \r\n    //The useEffect calls fetchAPI with gamesData in order to update once the user inputs a game.\r\n    useEffect(() => {\r\n      fetchAPI()\r\n    }, [gamesData]);\r\n\r\n    const handleLibrary = (gameInput) => {\r\n        var alreadyAdded = false;\r\n        for (var x = 0; x<localStorage.length; x++){\r\n            let LSData = localStorage.getItem(localStorage.key(x));\r\n            if(LSData == gameInput){\r\n                console.log(\"Game is already added to Library!\");\r\n                alreadyAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        //If the game hasn't been added to localStorage, add it and keep track of what indexes\r\n        //have been used (will use this in SavedGames.js).\r\n        if(!alreadyAdded){\r\n            const orderedLS = JSON.parse(localStorage.getItem('order')) || [];\r\n            const key = orderedLS.length > 0 ? Math.max(...orderedLS.map(Number)) + 1 : 0;\r\n            \r\n            orderedLS.push(String(key));\r\n            localStorage.setItem('order', JSON.stringify(orderedLS));\r\n            localStorage.setItem(key, gameInput);\r\n\r\n            //setGames\r\n            console.log(\"Added \", gameInput, \" to library!\");\r\n        }\r\n    }\r\n    \r\n\r\n  return (\r\n    <div className = \"games\">\r\n        <div className = \"row-games\">\r\n            <div className = \"Games-Middle\">\r\n                <img\r\n                    src = {PC}\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                {data1 != \"No games searched...\" &&\r\n                    data1.map((game, index) => (\r\n                        <>\r\n                            <span key={index}>{game}</span>\r\n                            <br></br>\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <div className = \"Games-Button\">\r\n                    <button id=\"GamesButton\" onClick = {() => handleLibrary(data1[0])}>\r\n                        \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className = \"row-games\">\r\n            <div className = \"Games-Middle\">\r\n                <img\r\n                    src = {PC}\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <p>\r\n                {data2 != \"No games searched...\" &&\r\n                    data2.map((game, index) => (\r\n                        <>\r\n                            <span key={index}>{game}</span>\r\n                            <br></br>\r\n                        </>\r\n                    ))\r\n                }\r\n                </p>\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <div className = \"Games-Button\">\r\n                    <button id=\"GamesButton\" onClick = {() => handleLibrary(data2[0])} >\r\n                        \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className = \"row-games\">\r\n            <div className = \"Games-Middle\">\r\n                <img\r\n                    src = {PC}\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <p>\r\n                {data3 != \"No games searched...\" &&\r\n                    data3.map((game, index) => (\r\n                        <>\r\n                            <span key={index}>{game}</span>\r\n                            <br></br>\r\n                        </>\r\n                    ))\r\n                }\r\n                </p>\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <div className = \"Games-Button\">\r\n                    <button id=\"GamesButton\" onClick = {() => handleLibrary(data3[0])} >\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Games;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,MAAO,CAAAC,EAAE,KAAM,qBAAqB,CACpC,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAc,IAAb,CAACC,SAAS,CAAC,CAAAD,IAAA,CACtB;AACA;AACA,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACtC,GAAI,CAAAkB,OAAO,CAAG,CAAC,CAEfC,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC,CAEtB;AACA;AACA,KAAM,CAAAU,QAAQ,CAAG,KAAAA,CAAA,GAAW,CACxB;AACA,GAAGV,SAAS,EAAI,IAAI,CAAC,CACjBE,QAAQ,CAAC,sBAAsB,CAAC,CAChCE,QAAQ,CAAC,sBAAsB,CAAC,CAChCE,QAAQ,CAAC,sBAAsB,CAAC,CACpC,CAAC,IACG,CACA,GAAI,CAAAR,KAAK,CAAG,EAAE,CACd,GAAI,CAAAa,YAAY,CAAG,EAAE,CAErB;AACA,IAAK,GAAI,CAAAC,GAAG,GAAI,CAAAZ,SAAS,CAACa,KAAK,CAAC,CAC5Bf,KAAK,CAACgB,IAAI,CAACd,SAAS,CAACa,KAAK,CAACD,GAAG,CAAC,CAAC,CACpC,CAEA;AACA,IAAK,GAAI,CAAAG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAC,CAAC,CAAEA,CAAC,EAAE,CAAC,CACrBjB,KAAK,CAACiB,CAAC,CAAC,CAAGjB,KAAK,CAACiB,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CACpClB,KAAK,CAACiB,CAAC,CAAC,CAAGjB,KAAK,CAACiB,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CACxClB,KAAK,CAACiB,CAAC,CAAC,CAAGjB,KAAK,CAACiB,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CACpClB,KAAK,CAACiB,CAAC,CAAC,CAAGjB,KAAK,CAACiB,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CACpClB,KAAK,CAACiB,CAAC,CAAC,CAAGjB,KAAK,CAACiB,CAAC,CAAC,CAACE,KAAK,CAAC,SAAS,CAAC,CACpCN,YAAY,CAACG,IAAI,CAAChB,KAAK,CAACiB,CAAC,CAAC,CAAC,CAC/B,CAEAb,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,CAAC,CACzBP,QAAQ,CAACO,YAAY,CAAC,CAAC,CAAC,CAAC,CACzBL,QAAQ,CAACK,YAAY,CAAC,CAAC,CAAC,CAAC,CAC7B,CACJ,CAAC,CAED;AACArB,SAAS,CAAC,IAAM,CACdoB,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,CAACV,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAkB,aAAa,CAAIC,SAAS,EAAK,CACjC,GAAI,CAAAC,YAAY,CAAG,KAAK,CACxB,IAAK,GAAI,CAAAL,CAAC,CAAG,CAAC,CAAEA,CAAC,CAACM,YAAY,CAACC,MAAM,CAAEP,CAAC,EAAE,CAAC,CACvC,GAAI,CAAAQ,MAAM,CAAGF,YAAY,CAACG,OAAO,CAACH,YAAY,CAACT,GAAG,CAACG,CAAC,CAAC,CAAC,CACtD,GAAGQ,MAAM,EAAIJ,SAAS,CAAC,CACnBX,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAChDW,YAAY,CAAG,IAAI,CACnB,MACJ,CACJ,CACA;AACA;AACA,GAAG,CAACA,YAAY,CAAC,CACb,KAAM,CAAAK,SAAS,CAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,CAAC,EAAI,EAAE,CACjE,KAAM,CAAAZ,GAAG,CAAGa,SAAS,CAACH,MAAM,CAAG,CAAC,CAAGM,IAAI,CAACC,GAAG,CAAC,GAAGJ,SAAS,CAACK,GAAG,CAACC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAG,CAAC,CAE7EN,SAAS,CAACX,IAAI,CAACkB,MAAM,CAACpB,GAAG,CAAC,CAAC,CAC3BS,YAAY,CAACY,OAAO,CAAC,OAAO,CAAEP,IAAI,CAACQ,SAAS,CAACT,SAAS,CAAC,CAAC,CACxDJ,YAAY,CAACY,OAAO,CAACrB,GAAG,CAAEO,SAAS,CAAC,CAEpC;AACAX,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEU,SAAS,CAAE,cAAc,CAAC,CACpD,CACJ,CAAC,CAGH,mBACEtB,KAAA,QAAKsC,SAAS,CAAG,OAAO,CAAAC,QAAA,eACpBvC,KAAA,QAAKsC,SAAS,CAAG,WAAW,CAAAC,QAAA,eACxB3C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,QACI4C,GAAG,CAAI9C,EAAG,CACV+C,GAAG,CAAG,EAAE,CACX,CAAC,CACD,CAAC,cACN7C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,CAC1BnC,KAAK,EAAI,sBAAsB,EAC5BA,KAAK,CAAC6B,GAAG,CAAC,CAACS,IAAI,CAAEC,KAAK,gBAClB3C,KAAA,CAAAF,SAAA,EAAAyC,QAAA,eACI3C,IAAA,SAAA2C,QAAA,CAAmBG,IAAI,EAAZC,KAAmB,CAAC,cAC/B/C,IAAA,QAAQ,CAAC,EACX,CACL,CAAC,CAEL,CAAC,cACNA,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,WAAQgD,EAAE,CAAC,aAAa,CAACC,OAAO,CAAIA,CAAA,GAAMxB,aAAa,CAACjB,KAAK,CAAC,CAAC,CAAC,CAAE,CAE1D,CAAC,CACR,CAAC,CACL,CAAC,EACL,CAAC,cACNJ,KAAA,QAAKsC,SAAS,CAAG,WAAW,CAAAC,QAAA,eACxB3C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,QACI4C,GAAG,CAAI9C,EAAG,CACV+C,GAAG,CAAG,EAAE,CACX,CAAC,CACD,CAAC,cACN7C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,MAAA2C,QAAA,CACCjC,KAAK,EAAI,sBAAsB,EAC5BA,KAAK,CAAC2B,GAAG,CAAC,CAACS,IAAI,CAAEC,KAAK,gBAClB3C,KAAA,CAAAF,SAAA,EAAAyC,QAAA,eACI3C,IAAA,SAAA2C,QAAA,CAAmBG,IAAI,EAAZC,KAAmB,CAAC,cAC/B/C,IAAA,QAAQ,CAAC,EACX,CACL,CAAC,CAEH,CAAC,CACH,CAAC,cACNA,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,WAAQgD,EAAE,CAAC,aAAa,CAACC,OAAO,CAAIA,CAAA,GAAMxB,aAAa,CAACf,KAAK,CAAC,CAAC,CAAC,CAAE,CAE1D,CAAC,CACR,CAAC,CACL,CAAC,EACL,CAAC,cACNN,KAAA,QAAKsC,SAAS,CAAG,WAAW,CAAAC,QAAA,eACxB3C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,QACI4C,GAAG,CAAI9C,EAAG,CACV+C,GAAG,CAAG,EAAE,CACX,CAAC,CACD,CAAC,cACN7C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,MAAA2C,QAAA,CACC/B,KAAK,EAAI,sBAAsB,EAC5BA,KAAK,CAACyB,GAAG,CAAC,CAACS,IAAI,CAAEC,KAAK,gBAClB3C,KAAA,CAAAF,SAAA,EAAAyC,QAAA,eACI3C,IAAA,SAAA2C,QAAA,CAAmBG,IAAI,EAAZC,KAAmB,CAAC,cAC/B/C,IAAA,QAAQ,CAAC,EACX,CACL,CAAC,CAEH,CAAC,CACH,CAAC,cACNA,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,QAAK0C,SAAS,CAAG,cAAc,CAAAC,QAAA,cAC3B3C,IAAA,WAAQgD,EAAE,CAAC,aAAa,CAACC,OAAO,CAAIA,CAAA,GAAMxB,aAAa,CAACb,KAAK,CAAC,CAAC,CAAC,CAAE,CAE1D,CAAC,CACR,CAAC,CACL,CAAC,EACL,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
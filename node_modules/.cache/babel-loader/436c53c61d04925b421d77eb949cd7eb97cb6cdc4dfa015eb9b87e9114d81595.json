{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rfell\\\\react-recommend-page\\\\src\\\\Library JS\\\\SavedGames.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LibraryCSS/Saved.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavedGames() {\n  _s();\n  const [gameData, setGameData] = useState([]);\n  const [link, setLink] = useState([]);\n\n  //From localStorage, get names, return them, and search for games in \n  //custom Google Search API, returning these as images (need to dynamically\n  //set width/height).\n\n  //Using a useEffect to continuously load data from local storage and outputing that as our library data.\n  useEffect(() => {\n    const libraryGames = [];\n    var imageData;\n    for (let x = 0; x < localStorage.length; x++) {\n      //Here, we set the game name, the data for our link/API call, and the key each game is associated with.\n      const gameName = localStorage.getItem(localStorage.key(x)).replace(/\"/g, '');\n      const plusGameName = gameName.replace(' ', '+');\n      const linkData = `https://store.steampowered.com/search/?term=${plusGameName}`;\n\n      //We make our API call to google, giving it our game name (formatted for URLs) and returning an image.\n      fetch(`GET https://www.googleapis.com/customsearch/v1?key=AIzaSyA8yVgNiwh3Mf7OCHvcrQPL4ocikLadk1Y&cx=74bd649225d0f43ba:omuauf_lfve&q=${plusGameName}`).then(response => response.json()).then(data => {\n        imageData = data.items[0].link;\n      });\n      libraryGames.push({\n        name: gameName,\n        image: imageData,\n        url: linkData,\n        key: localStorage.key(x)\n      });\n    }\n    setGameData(libraryGames);\n  }, []);\n  const handleRemove = index => {\n    localStorage.removeItem(index);\n    console.log(\"Removed game was: \", index);\n    setGameData(prevGame => prevGame.filter(game => game.key !== index));\n  };\n  function fetchAPIImages(gameNameURL) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: gameData.length > 0 ? gameData.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OuterLibrary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"gcse-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InnerLibrary\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: game.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"gameURLs\",\n          children: game.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"removeGame\",\n          onClick: () => handleRemove(game.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OuterLibrary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No games are added to your library!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(SavedGames, \"1SfzhfKyrnA0bnkH+EYFWbtAZy0=\");\n_c = SavedGames;\nexport default SavedGames;\nvar _c;\n$RefreshReg$(_c, \"SavedGames\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SavedGames","_s","gameData","setGameData","link","setLink","libraryGames","imageData","x","localStorage","length","gameName","getItem","key","replace","plusGameName","linkData","fetch","then","response","json","data","items","push","name","image","url","handleRemove","index","removeItem","console","log","prevGame","filter","game","fetchAPIImages","gameNameURL","children","map","className","class","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rfell/react-recommend-page/src/Library JS/SavedGames.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LibraryCSS/Saved.css';\r\n\r\n\r\nfunction SavedGames() {\r\n\r\n  const [gameData, setGameData] = useState([]);\r\n  const [link, setLink] = useState([]);\r\n\r\n  //From localStorage, get names, return them, and search for games in \r\n  //custom Google Search API, returning these as images (need to dynamically\r\n  //set width/height).\r\n\r\n  //Using a useEffect to continuously load data from local storage and outputing that as our library data.\r\n  useEffect(() => {\r\n    const libraryGames = [];\r\n    var imageData;\r\n    for (let x = 0; x<localStorage.length; x++){\r\n      //Here, we set the game name, the data for our link/API call, and the key each game is associated with.\r\n      const gameName = localStorage.getItem(localStorage.key(x)).replace(/\"/g, '');\r\n      const plusGameName = gameName.replace(' ', '+');\r\n      const linkData = `https://store.steampowered.com/search/?term=${plusGameName}`;\r\n      \r\n      //We make our API call to google, giving it our game name (formatted for URLs) and returning an image.\r\n      fetch(`GET https://www.googleapis.com/customsearch/v1?key=AIzaSyA8yVgNiwh3Mf7OCHvcrQPL4ocikLadk1Y&cx=74bd649225d0f43ba:omuauf_lfve&q=${plusGameName}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          imageData = data.items[0].link;\r\n      });\r\n      \r\n      libraryGames.push({name: gameName, image: imageData, url: linkData, key: localStorage.key(x)});\r\n    }\r\n\r\n    setGameData(libraryGames);\r\n  }, []);\r\n\r\n  const handleRemove = (index) => {\r\n    localStorage.removeItem(index);\r\n    console.log(\"Removed game was: \", index);\r\n    setGameData((prevGame) => prevGame.filter((game) => game.key !== index));\r\n  }\r\n\r\n  function fetchAPIImages(gameNameURL) {\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {gameData.length > 0 ? (\r\n        gameData.map((game, index) => (\r\n          <div className='OuterLibrary'>\r\n            <div class=\"gcse-search\">\r\n\r\n            </div>\r\n            <div key={index} className='InnerLibrary'>\r\n              <a href={game.url} target=\"_blank\" rel=\"noopener noreferrer\" className='gameURLs'>\r\n                {game.name}\r\n              </a>\r\n              <button id=\"removeGame\" onClick = {() => handleRemove(game.key)} />\r\n            </div>\r\n          </div> \r\n        ))\r\n      ) : (\r\n        <div className='OuterLibrary'>\r\n          <p>No games are added to your library!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedGames;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA;EACA;;EAEA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAG,EAAE;IACvB,IAAIC,SAAS;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACC,YAAY,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAC;MACzC;MACA,MAAMG,QAAQ,GAAGF,YAAY,CAACG,OAAO,CAACH,YAAY,CAACI,GAAG,CAACL,CAAC,CAAC,CAAC,CAACM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC5E,MAAMC,YAAY,GAAGJ,QAAQ,CAACG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MAC/C,MAAME,QAAQ,GAAG,+CAA+CD,YAAY,EAAE;;MAE9E;MACAE,KAAK,CAAC,iIAAiIF,YAAY,EAAE,CAAC,CACnJG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZd,SAAS,GAAGc,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAClB,IAAI;MAClC,CAAC,CAAC;MAEFE,YAAY,CAACiB,IAAI,CAAC;QAACC,IAAI,EAAEb,QAAQ;QAAEc,KAAK,EAAElB,SAAS;QAAEmB,GAAG,EAAEV,QAAQ;QAAEH,GAAG,EAAEJ,YAAY,CAACI,GAAG,CAACL,CAAC;MAAC,CAAC,CAAC;IAChG;IAEAL,WAAW,CAACG,YAAY,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,YAAY,GAAIC,KAAK,IAAK;IAC9BnB,YAAY,CAACoB,UAAU,CAACD,KAAK,CAAC;IAC9BE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,KAAK,CAAC;IACxCzB,WAAW,CAAE6B,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACrB,GAAG,KAAKe,KAAK,CAAC,CAAC;EAC1E,CAAC;EAED,SAASO,cAAcA,CAACC,WAAW,EAAE,CAIrC;EAGA,oBACErC,OAAA;IAAAsC,QAAA,EACGnC,QAAQ,CAACQ,MAAM,GAAG,CAAC,GAClBR,QAAQ,CAACoC,GAAG,CAAC,CAACJ,IAAI,EAAEN,KAAK,kBACvB7B,OAAA;MAAKwC,SAAS,EAAC,cAAc;MAAAF,QAAA,gBAC3BtC,OAAA;QAAKyC,KAAK,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CAAC,eACN7C,OAAA;QAAiBwC,SAAS,EAAC,cAAc;QAAAF,QAAA,gBACvCtC,OAAA;UAAG8C,IAAI,EAAEX,IAAI,CAACR,GAAI;UAACoB,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAACR,SAAS,EAAC,UAAU;UAAAF,QAAA,EAC9EH,IAAI,CAACV;QAAI;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACJ7C,OAAA;UAAQiD,EAAE,EAAC,YAAY;UAACC,OAAO,EAAIA,CAAA,KAAMtB,YAAY,CAACO,IAAI,CAACrB,GAAG;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAJ3DhB,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,CAAC,gBAEF7C,OAAA;MAAKwC,SAAS,EAAC,cAAc;MAAAF,QAAA,eAC3BtC,OAAA;QAAAsC,QAAA,EAAG;MAAmC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3C,EAAA,CApEQD,UAAU;AAAAkD,EAAA,GAAVlD,UAAU;AAsEnB,eAAeA,UAAU;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
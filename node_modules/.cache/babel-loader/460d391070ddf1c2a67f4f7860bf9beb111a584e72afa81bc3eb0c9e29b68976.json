{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rfell\\\\react-recommend-page\\\\src\\\\Reference JS\\\\Games.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PC from './Images/PCLogo.png';\nimport AddImage from './Images/AddButton.png';\nimport './CSS/Games.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Games({\n  gamesData\n}) {\n  _s();\n  //The JSON data is sent as an input to this function from Search.js. We return 3 games, so we have the three\n  //useStates, and to clean up the JSON data, we have the strings and Game variables.\n  const [data1, setData1] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n  console.log(gamesData);\n\n  //This function doesn't update the HTML if no game data is input. If it is, the JSON game data is \n  //cleaned up and then the useStates data are set to each game's data. This is then mapped in the returned HTML.\n  const fetchAPI = async () => {\n    //If there's no input, then add nothing to the HTML.\n    if (gamesData == null) {\n      setData1(\"No games searched...\");\n      setData2(\"No games searched...\");\n      setData3(\"No games searched...\");\n    } else {\n      let Games = [];\n      let updatedGames = [];\n\n      //Push the game data from the API into the Games array.\n      for (let key in gamesData.games) {\n        Games.push(gamesData.games[key]);\n      }\n\n      //We return up to three games and their data, cleaning it\n      for (let x = 0; x < 3; x++) {\n        Games[x] = Games[x].replace('[', '');\n        Games[x] = Games[x].replace(/\\\\u/g, ' ');\n        Games[x] = Games[x].replace(']', '');\n        Games[x] = Games[x].replace(\",\", '');\n        Games[x] = Games[x].split(/\\s(?=\")/);\n        updatedGames.push(Games[x]);\n      }\n      setData1(updatedGames[0]);\n      setData2(updatedGames[1]);\n      setData3(updatedGames[2]);\n    }\n  };\n\n  //The useEffect calls fetchAPI with gamesData in order to update once the user inputs a game.\n  useEffect(() => {\n    fetchAPI();\n  }, [gamesData]);\n  const handleLibrary = gameInput => {\n    var alreadyAdded = false;\n    for (var x = 0; x < localStorage.length; x++) {\n      let LSData = localStorage.getItem(localStorage.key(x));\n      if (LSData == gameInput) {\n        console.log(\"Game is already added to Library!\");\n        alreadyAdded = true;\n        break;\n      }\n    }\n    //If the game hasn't been added to localStorage, add it and keep track of what indexes\n    //have been used (will use this in SavedGames.js).\n    if (!alreadyAdded) {\n      const orderedLS = JSON.parse(localStorage.getItem('order')) || [];\n      const key = orderedLS.length > 0 ? Math.max(...orderedLS.map(Number)) + 1 : 0;\n      orderedLS.push(String(key));\n      localStorage.setItem('order', JSON.stringify(orderedLS));\n      localStorage.setItem(key, gameInput);\n\n      //setGames\n      console.log(\"Added \", gameInput, \" to library!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"games\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-games\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PC,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: data1 != \"No games searched...\" && data1.map((game, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: game\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Games-Button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"GamesButton\",\n            onClick: () => handleLibrary(data1[0]),\n            imgSrc: AddImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-games\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PC,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data2 != \"No games searched...\" && data2.map((game, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: game\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Games-Button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"GamesButton\",\n            onClick: () => handleLibrary(data2[0]),\n            imgSrc: AddImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-games\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PC,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data3 != \"No games searched...\" && data3.map((game, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: game\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Games-Middle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Games-Button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"GamesButton\",\n            onClick: () => handleLibrary(data3[0]),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: AddImage,\n              id: \"GamesImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Games, \"xWNFN+cLi/tkTuw/2gYUMdFcze4=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","PC","AddImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Games","gamesData","_s","data1","setData1","data2","setData2","data3","setData3","console","log","fetchAPI","updatedGames","key","games","push","x","replace","split","handleLibrary","gameInput","alreadyAdded","localStorage","length","LSData","getItem","orderedLS","JSON","parse","Math","max","map","Number","String","setItem","stringify","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","game","index","id","onClick","imgSrc","_c","$RefreshReg$"],"sources":["C:/Users/rfell/react-recommend-page/src/Reference JS/Games.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PC from './Images/PCLogo.png';\r\nimport AddImage from './Images/AddButton.png'\r\nimport './CSS/Games.css';\r\n\r\nfunction Games({gamesData}) {\r\n    //The JSON data is sent as an input to this function from Search.js. We return 3 games, so we have the three\r\n    //useStates, and to clean up the JSON data, we have the strings and Game variables.\r\n    const [data1, setData1] = useState([]);\r\n    const [data2, setData2] = useState([]);\r\n    const [data3, setData3] = useState([]);\r\n\r\n    console.log(gamesData)\r\n    \r\n    //This function doesn't update the HTML if no game data is input. If it is, the JSON game data is \r\n    //cleaned up and then the useStates data are set to each game's data. This is then mapped in the returned HTML.\r\n    const fetchAPI = async() => {\r\n        //If there's no input, then add nothing to the HTML.\r\n        if(gamesData == null){\r\n            setData1(\"No games searched...\");\r\n            setData2(\"No games searched...\");\r\n            setData3(\"No games searched...\");\r\n        }\r\n        else{\r\n            let Games = [];\r\n            let updatedGames = [];\r\n            \r\n            //Push the game data from the API into the Games array.\r\n            for (let key in gamesData.games){\r\n                Games.push(gamesData.games[key]);\r\n            }\r\n\r\n            //We return up to three games and their data, cleaning it\r\n            for (let x = 0; x<3; x++){\r\n                Games[x] = Games[x].replace('[', '');\r\n                Games[x] = Games[x].replace(/\\\\u/g, ' ');\r\n                Games[x] = Games[x].replace(']', '');\r\n                Games[x] = Games[x].replace(\",\", '');\r\n                Games[x] = Games[x].split(/\\s(?=\")/);\r\n                updatedGames.push(Games[x]);\r\n            }\r\n\r\n            setData1(updatedGames[0]);\r\n            setData2(updatedGames[1]);\r\n            setData3(updatedGames[2]);\r\n        }\r\n    };\r\n     \r\n    //The useEffect calls fetchAPI with gamesData in order to update once the user inputs a game.\r\n    useEffect(() => {\r\n      fetchAPI()\r\n    }, [gamesData]);\r\n\r\n    const handleLibrary = (gameInput) => {\r\n        var alreadyAdded = false;\r\n        for (var x = 0; x<localStorage.length; x++){\r\n            let LSData = localStorage.getItem(localStorage.key(x));\r\n            if(LSData == gameInput){\r\n                console.log(\"Game is already added to Library!\");\r\n                alreadyAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        //If the game hasn't been added to localStorage, add it and keep track of what indexes\r\n        //have been used (will use this in SavedGames.js).\r\n        if(!alreadyAdded){\r\n            const orderedLS = JSON.parse(localStorage.getItem('order')) || [];\r\n            const key = orderedLS.length > 0 ? Math.max(...orderedLS.map(Number)) + 1 : 0;\r\n            \r\n            orderedLS.push(String(key));\r\n            localStorage.setItem('order', JSON.stringify(orderedLS));\r\n            localStorage.setItem(key, gameInput);\r\n\r\n            //setGames\r\n            console.log(\"Added \", gameInput, \" to library!\");\r\n        }\r\n    }\r\n    \r\n\r\n  return (\r\n    <div className = \"games\">\r\n        <div className = \"row-games\">\r\n            <div className = \"Games-Middle\">\r\n                <img\r\n                    src = {PC}\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                {data1 != \"No games searched...\" &&\r\n                    data1.map((game, index) => (\r\n                        <>\r\n                            <span key={index}>{game}</span>\r\n                            <br></br>\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <div className = \"Games-Button\">\r\n                    <button id=\"GamesButton\" onClick = {() => handleLibrary(data1[0])} imgSrc={AddImage}>\r\n                        \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className = \"row-games\">\r\n            <div className = \"Games-Middle\">\r\n                <img\r\n                    src = {PC}\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <p>\r\n                {data2 != \"No games searched...\" &&\r\n                    data2.map((game, index) => (\r\n                        <>\r\n                            <span key={index}>{game}</span>\r\n                            <br></br>\r\n                        </>\r\n                    ))\r\n                }\r\n                </p>\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <div className = \"Games-Button\">\r\n                    <button id=\"GamesButton\" onClick = {() => handleLibrary(data2[0])} imgSrc={AddImage}>\r\n                        \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className = \"row-games\">\r\n            <div className = \"Games-Middle\">\r\n                <img\r\n                    src = {PC}\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <p>\r\n                {data3 != \"No games searched...\" &&\r\n                    data3.map((game, index) => (\r\n                        <>\r\n                            <span key={index}>{game}</span>\r\n                            <br></br>\r\n                        </>\r\n                    ))\r\n                }\r\n                </p>\r\n            </div>\r\n            <div className = \"Games-Middle\">\r\n                <div className = \"Games-Button\">\r\n                    <button id=\"GamesButton\" onClick = {() => handleLibrary(data3[0])} >\r\n                        <img src={AddImage} id='GamesImage'></img>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Games;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}